{
	"info": {
		"_postman_id": "45d4f41e-e679-4b38-bff4-bcd74c0eb320",
		"name": "Teste ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Cenários positivos",
					"item": [
						{
							"name": "Cadastrar produtos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validando o produto com cadastro duplicado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Já existe produto com esse nome\");\r",
											"});\r",
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Smarttv 70 polegadas\",\r\n  \"preco\": 8000,\r\n  \"descricao\": \"Samsung\",\r\n  \"quantidade\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/produtos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listar produtos por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar produto da lista\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Smarttv 55 polegadas\");\r",
											"});\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/produtos/yRHDgXmdMq4GU8ry",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos",
										"yRHDgXmdMq4GU8ry"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listar produtos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar produto da lista\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Samsung 60 polegadas\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validar produto da lista\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Smarttv 55 polegadas\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/produtos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar produto por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Validar se o registro foi alterado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Iphone XR v3\",\r\n  \"preco\": 4200,\r\n  \"descricao\": \"Telefone Celular\",\r\n  \"quantidade\": 500\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{local}}produtos/5eNz80Z9jzFRzq4n",
									"host": [
										"{{local}}produtos"
									],
									"path": [
										"5eNz80Z9jzFRzq4n"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete produtos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar mensagem\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
											"});\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{local}}produtos/rXALqb3XatZspeRx",
									"host": [
										"{{local}}produtos"
									],
									"path": [
										"rXALqb3XatZspeRx"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cenários negativos",
					"item": [
						{
							"name": "Listar produtos request incorreto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar método incorreto\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code é 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/produtos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "ID do produto incorreto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar produto inexistente\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Produto não encontrado\");\r",
											"});\r",
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/produtos/yRHDgXmdMq4GU8r6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos",
										"yRHDgXmdMq4GU8r6"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastrar produtos com token inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validando token\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
											"});\r",
											"pm.test(\"Status code é 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkpvaG5Db25ub3JzX1NjaHdhemVuZWdnZXJAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJ0ZXN0ZSIsImlhdCI6MTY0NzAxNjQ4MSwiZXhwIjoxNjQ3MDE3MDgxfQ.OASll5EENu7mWPfif-4feZJpxCVsQaz9u4hTPPPtM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Smarttv 60 polegadas\",\r\n  \"preco\": 5000,\r\n  \"descricao\": \"Samsung\",\r\n  \"quantidade\": 200\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/produtos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cadastro de produto com existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar se já existe produto cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Já existe produto com esse nome\");\r",
											"});\r",
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Smarttv 60 polegadas\",\r\n  \"preco\": 5000,\r\n  \"descricao\": \"Samsung\",\r\n  \"quantidade\": 200\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/produtos",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar produto inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Validar se o token é válido\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IkpvaG5Db25ub3JzX1NjaHdhemVuZWdnZXJAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJ0ZXN0ZSIsImlhdCI6MTY0NzAxNjQ4MSwiZXhwIjoxNjQ3MDE3MDgxfQ.OASll5EENu7mWPfif-4feZJpxCVsQaz9u4hTP",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Iphone XR v3\",\r\n  \"preco\": 4200,\r\n  \"descricao\": \"Telefone Celular\",\r\n  \"quantidade\": 500\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{local}}produtos/5eNz80Z9jzFRz",
									"host": [
										"{{local}}produtos"
									],
									"path": [
										"5eNz80Z9jzFRz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Alterar produto com token inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Validar se o produto já existe\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Já existe produto com esse nome\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Iphone XR v3\",\r\n  \"preco\": 4200,\r\n  \"descricao\": \"Telefone Celular\",\r\n  \"quantidade\": 500\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{local}}produtos/5eNz80Z9jzFRz",
									"host": [
										"{{local}}produtos"
									],
									"path": [
										"5eNz80Z9jzFRz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete produtos no carrinho",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar se o produto no carrinho\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é permitido excluir produto que faz parte de carrinho\");\r",
											"});\r",
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{local}}produtos/BeeJh5lz3k6kSIzA",
									"host": [
										"{{local}}produtos"
									],
									"path": [
										"BeeJh5lz3k6kSIzA"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete produtos inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Validar mensagem\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
											"});\r",
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{local}}produtos/rXALqb3XatZ",
									"host": [
										"{{local}}produtos"
									],
									"path": [
										"rXALqb3XatZ"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Cenários positivos",
					"item": [
						{
							"name": "Novo Usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar novo usuário cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"John Connors One\",\r\n  \"email\": \"JohnConnors_Schwazenegger_One@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/usuarios",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "Listar usuário",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar usuário cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"John Connors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validar email usuário cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"JohnConnors_Schwazenegger@qa.com.br\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/usuarios/0qqUK7XLOCO12iL8",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios",
										"0qqUK7XLOCO12iL8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resposta = pm.response.json();\r",
											"pm.globals.set(\"token\", resposta.authorization);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validando o sucesso do Login\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"JohnConnors_Schwazenegger@qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cenários negativos",
					"item": [
						{
							"name": "Email duplicado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar email já cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"John Connors\",\r\n  \"email\": \"JohnConnors_Schwazenegger@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/usuarios",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "Método de requisição incorreto",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 405\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar email já cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Não é possível realizar PUT em /usuarios. Acesse http://localhost:3000 para ver as rotas disponíveis e como utilizá-las.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"John Connors\",\r\n  \"email\": \"JohnConnors_Schwazenegger@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/usuarios",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "Usuário não encontrado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar usuário cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"John Connors\");\r",
											"});\r",
											"\r",
											"pm.test(\"Validar email usuário cadastrado\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"JohnConnors_Schwazenegger@qa.com.br\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/usuarios/0qqUK7XLOCO12iLS",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"usuarios",
										"0qqUK7XLOCO12iLS"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Email inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Validando o email do login\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"email deve ser um email válido\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"JohnConnors_Schwazenegger#qa.com.br\",\r\n  \"password\": \"teste\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}